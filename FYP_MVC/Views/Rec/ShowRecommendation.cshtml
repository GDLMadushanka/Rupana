@using FYP_MVC.Models.CoreObjects
@model FYP_MVC.Models.CoreObjects.ChartVisualizationObject

@{
    ViewBag.Title = "ShowRecommendation";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<style>
    .listrap {
        list-style-type: none;
        margin: 0;
        padding: 0;
        cursor: default;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

        .listrap li {
            margin: 0;
            padding: 10px;
        }

            .listrap li.active, .listrap li:hover {
                background-color: #d9edf7;
            }

        .listrap strong {
            margin-left: 10px;
        }

        .listrap .listrap-toggle {
            display: inline-block;
            width: 90px;
            height: 90px;
        }

            .listrap .listrap-toggle span {
                background-color: #042e52;
                opacity: 0.8;
                z-index: 100;
                width: 90px;
                height: 90px;
                display: none;
                position: absolute;
                border-radius: 50%;
                text-align: center;
                line-height: 90px;
                vertical-align: middle;
                color: #ffffff;
            }

                .listrap .listrap-toggle span:before {
                    font-family: 'Glyphicons Halflings';
                    content: "\e013";
                }

        .listrap li.active .listrap-toggle span {
            display: block;
        }
</style>


<h3>Chart Recommendation</h3>
<div class="row">

    <img style="position:absolute; TOP:70px; RIGHT:0px; HEIGHT:460px" src="~/Content/img/feedback.png">

    <div class="col-lg-4">
        <ul class="listrap">



            @{int count = Model.chartTypes.Length;
                Boolean PC = false;
                int id = 0; }
            @for (int i = 0; i < count; i++)
            {
                if (Model.chartTypes[i].Equals("Parallel cordinates")) { PC = true; id = i; continue; }
                <li>
                    <div class="avatar listrap-toggle" id="@i" onclick="set_feedback(this)">
                        <span></span>
                        <img src="~/Content/img/chartImages/@(Model.chartTypes[i]).png" height="90px" width="90px" class="img-circle" />
                    </div>
                    <strong>@Html.ActionLink(Model.chartTypes[i], "visualizeDataFile", "Task", new { num = i },new { @style = "color:black" })</strong>
                </li>
            }
            @{if (PC)
                {
                    <li>
                        <div class="avatar listrap-toggle" id=@id onclick="set_feedback(this)">
                            <span></span>
                            <img src="~/Content/img/chartImg/@(Model.chartTypes[id]).png" height="100px" width="100px" class="img-circle" />
                        </div>
                        <strong>@Html.ActionLink(Model.chartTypes[id], "visualizeDataFile", "Task", new { num = id }, null)</strong>
                    </li>
                } }
        </ul>
    </div>
</div>


<br />
<a href="#" id="show" class="btn btn-primary">Load more</a>
<a href="#" id="feedback" class="btn btn-primary">Save Feedback</a>
<br />
<div id="hidden">
    <div class="row">
        <div class="col-lg-4">
            <ul class="listrap">

                @{int count2 = Model.more_chartTypes.Length;
                    if (count2 > 0)
                    {
                        for (int i = count; i < count + count2; i++)
                        {
                            <li>
                                <div class="listrap-toggle" id="@i" onclick="set_feedback(this)">
                                    <span></span>
                                    <img src="~/Content/img/chartImg/@(Model.more_chartTypes[i-count]).png" height="60px" width="60px" class="img-circle" />
                                </div>
                                <strong>@Html.ActionLink(Model.more_chartTypes[i - count], "visualizeDataFile", "Task", new { num = i }, null)</strong>
                            </li>
                        }
                    } }
            </ul>
        </div>
    </div>
</div>

<script>
        var selected_chartId = -1;
        var feebackSaved = false;

        $(document).ready(function () {
            $("#hidden").hide();
            $(".listrap").listrap().on("selection-changed", function (event, selection) {
                                    console.log(selection);
                                });

                            });
        $("#show").click(function () {
            $("#hidden").show(2000);
                            });

        $("#feedback").click(function () {
            if (!feebackSaved) {
                if (selected_chartId == -1) { alert("Please select a chart type before saving feedback"); }
                else {
                    $.getJSON("@Url.Action("saveFeedback", "Task", new { num = "_noticeId"})".replace("_noticeId", selected_chartId), function (data) {
                        feebackSaved = true;
                        alert("Your feeback saved, Thank You!");
                    });
                }
            }
            else if (feebackSaved) { alert("Feedback already saved"); }
                            });



function set_feedback(elem){
$(".listrap-toggle").parent().removeClass();
                                elem.parentElement.className="active";
                                selected_chartId = elem.id;


                            }


</script>