<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Lumino - Dashboard</title>
    <script src="https://www.google.com/jsapi"></script>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script src="~/Content/js/jquery-1.11.1.min.js"></script>
    <script src="~/Content/js/jquery.csv.js"></script>
    <script src="~/Content/js/bootstrap.min.js"></script>
    <link href="~/Content/css/bootstrap.min.css" rel="stylesheet" />
    <link href="~/Content/css/bootstrap-theme.min.css" rel="stylesheet">
    <script src="~/Content/js/bootstrap-dropdown.js"></script>
    <link href="~/Content/css/datepicker3.css" rel="stylesheet" />
    <link href="~/Content/css/styles.css" rel="stylesheet" />
    <link href="~/Content/css/custom.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/font-awesome/4.5.0/css/font-awesome.min.css">
    <script src="http://ajax.googleapis.com/ajax/libs/jquery/1.5.2/jquery.min.js"></script>
    <script src="http://cdnjs.cloudflare.com/ajax/libs/modernizr/2.8.2/modernizr.js"></script>
    <!--Icons-->
    <link href="@Url.Content(" ~/Content/css/loader.css")" rel="stylesheet" type="text/css" />
    <script src="~/Content/js/lumino.glyphs.js"></script>
</head>



<body>
    <div class="se-pre-con"></div>
    <div id="wrapper">
        <nav class="navbar navbar-inverse navbar-fixed-top" role="navigation" style="background-color: rgb(13, 13, 176)">
            <div class="container-fluid">
                <div class="navbar-header">
                    <button type="button" class="navbar-toggle collapsed" data-toggle="collapse" data-target="#sidebar-collapse">
                        <span class="sr-only">Toggle navigation</span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                        <span class="icon-bar"></span>
                    </button>


                    <img src="~/Content/img/logo5.png" width="150" height="40" style="margin-top: 5px" />

                    <ul class="user-menu">
                        <li class="dropdown pull-right">
                            <a href="#" class="dropdown-toggle" data-toggle="dropdown"><svg class="glyph stroked male-user"><use xlink:href="#stroked-male-user"></use></svg> @Session["userName"] <span class="caret"></span></a>
                            <ul class="dropdown-menu" role="menu">
                                <li><a href="#"><svg class="glyph stroked male-user"><use xlink:href="#stroked-male-user"></use></svg> Profile</a></li>
                                <li><a href="#"><svg class="glyph stroked gear"><use xlink:href="#stroked-gear"></use></svg> Settings</a></li>
                                <li><a href="#" onclick="logout();" id="btnLogout"><svg class="glyph stroked cancel"><use xlink:href="#stroked-cancel"></use></svg>Logout  </a></li>
                            </ul>
                        </li>
                    </ul>
                </div>

            </div><!-- /.container-fluid -->
        </nav>

        <div id="sidebar-collapse" class="col-sm-3 col-lg-2 sidebar">
            <form role="search">
                <div class="form-group">

                </div>
            </form>
            <ul class="nav menu">
                <li>
                    <a @if (ViewData["activeMenu"] == "Home") { @: class="active-menu"
                                       }
                       href="@Url.Action("Home", "Admin")"><svg class="glyph stroked dashboard-dial"><use xlink:href="#stroked-dashboard-dial"></use></svg>Dashboard</a>
                </li>
                <li>
                    <a @if (ViewData["activeMenu"] == "ChartList") { @: class="active-menu"
                                       }
                       href="@Url.Action("ChartList", "Admin")"><svg class="glyph stroked line-graph"><use xlink:href="#stroked-line-graph"></use></svg>Charts</a>
                </li>
                <li>
                    <a @if (ViewData["activeMenu"] == "AddNewChart") { @: class="active-menu"
                                       }
                       href="@Url.Action("AddNewChart", "Admin")"><svg class="glyph stroked table"><use xlink:href="#stroked-table" /></svg>
Add New Chart</a>
                </li>
                <li>
                    <a @if (ViewData["activeMenu"] == "UserList") { @: class="active-menu"
                                       }
                       href="@Url.Action("UserList", "Admin")"><svg class="glyph stroked eye"><use xlink:href="#stroked-eye" /></svg>Users</a>
                </li>
                <li>
                    <a @if (ViewData["activeMenu"] == "MyProfile") { @: class="active-menu"
                                       }
                       href="@Url.Action("ProfileInfo", "Admin")"><svg class="glyph stroked male-user"><use xlink:href="#stroked-male-user"></use></svg>My Profile</a>
                </li>
                <li>
                    <a @if (ViewData["activeMenu"] == "Feedback") { @: class="active-menu"
                                                              }
                       href="@Url.Action("Feedback", "Admin")"><svg class="glyph stroked road"><use xlink:href="#stroked-male-user"></use></svg>Feedback</a>
                </li>
 </ul>
        </div><!--/.sidebar-->

        <div class="col-sm-9 col-sm-offset-3 col-lg-10 col-lg-offset-2 main">
            <div class="row">
                <ol class="breadcrumb">
                    <li><a href="#"><svg class="glyph stroked home"><use xlink:href="#stroked-home"></use></svg></a></li>
                    <li class="active">Icons</li>
                </ol>
            </div><!--/.row-->


            @RenderBody()



        </div>	<!--/.main-->


    </div>





    <script>


        $(window).load(function () {
            setTimeout(function () {
                $(".se-pre-con").fadeOut("slow");
            });
        });

        function statusChangeCallback(response) {
            console.log('statusChangeCallback');
            console.log(response);
            if (response.status === 'connected') {
                // Logged into your app and Facebook.
                testAPI();
            } else if (response.status === 'not_authorized') {
                // The person is logged into Facebook, but not your app.
                document.getElementById('status').innerHTML = 'Please log ' +
                  'into this app.';
            } else {
                // The person is not logged into Facebook, so we're not sure if
                // they are logged into this app or not.
                document.getElementById('status').innerHTML = 'Please log ' +
                  'into Facebook.';
            }
        }

        function checkLoginState() {
            FB.getLoginStatus(function (response) {
                statusChangeCallback(response);
            });
        }

        window.fbAsyncInit = function () {
            FB.init({
                appId: '582017025328479',
                cookie: true,  // enable cookies to allow the server to access
                // the session
                xfbml: true,  // parse social plugins on this page
                version: 'v2.8' // use graph api version 2.8
            });



            FB.getLoginStatus(function (response) {
                statusChangeCallback(response);
            });

        };


        // Here we run a very simple test of the Graph API after login is
        // successful.  See statusChangeCallback() for when this call is made.
        function testAPI() {

            FB.api('/me', { locale: 'en_US', fields: 'name,first_name,last_name, email' }, function (response) {

                document.getElementById('status').innerHTML =
                  'Thanks for logging in, ' + response.name + response.email + '!';

                $.ajax({
                    url: '@Url.Action("LoginWithFB", "Authentication")',
                    type: 'POST',
                    dataType: 'json',
                    cache: false,
                    data: { 'firstName': response.first_name, 'lastName': response.last_name, 'email': response.email },
                    success: function (response) {
                        if (response.result == 'Redirect') {
                            //redirecting to main page from here for the time being.
                            window.location = response.url;
                        }

                    },
                    error: function () {
                        alert('Error occured');
                    }
                });



            });
        }

        (function (d, s, id) {
            var js, fjs = d.getElementsByTagName(s)[0];
            if (d.getElementById(id)) { return; }
            js = d.createElement(s); js.id = id;
            js.src = "//connect.facebook.net/en_US/sdk.js";
            fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));


        function logout() {
            var isFBAuthenticated = '@Session["isFBAuthenticated"]';

            if (isFBAuthenticated === "True") {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("FBLogout", "Authentication")',
                    success: function (data) {
                        if (data.result === 'Redirect') {
                            FB.logout(function (response) {
                                window.location = data.url;
                            });
                        }
                    },
                    error: function () {
                        alert("Error in logging out with FB");
                    }
                });

            } else {
                $.ajax({
                    type: "POST",
                    url: '@Url.Action("Logout", "Authentication")',
                    success: function (data) {
                        if (data.result === 'Redirect') {
                            window.location = data.url;
                           @*$.ajax({
                               type: "GET",
                               url: '@Url.Action("Login", "Authentication")'

                           });*@

                           }
                    },
                    error: function () {

                        alert("Error in logging out");

                    }
                });
            }
        }



            !function ($) {
                $(document).on("click", "ul.nav li.parent > a > span.icon", function () {
                    $(this).find('em:first').toggleClass("glyphicon-minus");
                });
                $(".sidebar span.icon").find('em:first').addClass("glyphicon-plus");
            }(window.jQuery);

            $(window).on('resize', function () {
                if ($(window).width() > 768) $('#sidebar-collapse').collapse('show')
            })
            $(window).on('resize', function () {
                if ($(window).width() <= 767) $('#sidebar-collapse').collapse('hide')
            })
    </script>
</body>
</html>