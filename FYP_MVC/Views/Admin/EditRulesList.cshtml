@model FYP_MVC.Models.DAO.userFeedBack

@{
    ViewBag.Title = "AddNewRules";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>AddNewRules</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>userFeedBack</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.ID)

        <div class="form-group">
            @Html.LabelFor(model => model.name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.numOfDim, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.numOfDim, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.numOfDim, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.intention, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.intention, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.intention, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim1_IsContinuous, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim1_IsContinuous, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim1_IsContinuous, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim1_Cardinality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim1_Cardinality, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim1_Cardinality, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim1_context, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim1_context, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim1_context, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim2_IsContinuous, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim2_IsContinuous, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim2_IsContinuous, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim2_Cardinality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim2_Cardinality, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim2_Cardinality, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim2_context, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim2_context, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim2_context, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim3_IsContinuous, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim3_IsContinuous, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim3_IsContinuous, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim3_Cardinality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim3_Cardinality, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim3_Cardinality, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim3_context, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim3_context, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim3_context, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim4_IsContinuous, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim4_IsContinuous, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim4_IsContinuous, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim4_Cardinality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim4_Cardinality, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim4_Cardinality, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim4_context, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim4_context, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim4_context, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim5_IsContinuous, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim5_IsContinuous, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim5_IsContinuous, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim5_Cardinality, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim5_Cardinality, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim5_Cardinality, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.dim5_context, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.dim5_context, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.dim5_context, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.recommendation, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.recommendation, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.recommendation, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.score, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.score, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.score, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
